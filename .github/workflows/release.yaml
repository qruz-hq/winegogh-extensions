name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      update_type:
        description: 'Type of version bump'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  release:
    name: Bump version and create release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Bump version
      id: bump_version
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"

        # Extract current version from plugin file
        CURRENT_VERSION=$(grep -oP 'Version: \K[0-9]+\.[0-9]+\.[0-9]+' winegogh-extensions.php)
        echo "Current version: $CURRENT_VERSION"

        # Split version into parts
        IFS='.' read -r -a VERSION_PARTS <<< "$CURRENT_VERSION"
        MAJOR=${VERSION_PARTS[0]}
        MINOR=${VERSION_PARTS[1]}
        PATCH=${VERSION_PARTS[2]}

        # Determine the type of update
        UPDATE_TYPE="${{ github.event.inputs.update_type }}"

        if [ "$UPDATE_TYPE" == "major" ]; then
          MAJOR=$((MAJOR + 1))
          MINOR=0
          PATCH=0
        elif [ "$UPDATE_TYPE" == "minor" ]; then
          MINOR=$((MINOR + 1))
          PATCH=0
        else
          PATCH=$((PATCH + 1))
        fi

        NEW_VERSION="$MAJOR.$MINOR.$PATCH"
        echo "New version: $NEW_VERSION"

        # Update version in plugin file
        sed -i "s/Version: $CURRENT_VERSION/Version: $NEW_VERSION/" winegogh-extensions.php
        git add winegogh-extensions.php
        git commit -m "ci: bump version to $NEW_VERSION"
        git push origin main

        echo "new_version=$NEW_VERSION" >> $GITHUB_ENV

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.new_version }}
        release_name: ${{ env.new_version }}
        draft: false
        prerelease: false